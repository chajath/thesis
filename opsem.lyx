#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Simple Duck-Typing Language (SDTL)
\end_layout

\begin_layout Part
Operation Semantics
\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Subsection
Constant 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
con ::= number | boolean
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
number ::= Z
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
boolean ::= tt | ff
\end_layout

\end_deeper
\begin_layout Subsection
Expressions
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Lexpr ::= ID | Expr .
 ID | (Lexpr) 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Expr ::= con | 
\emph on
global
\emph default
 | Lexpr | 
\emph on
this
\emph default
 | 
\emph on
input
\emph default
 | 
\emph on
new
\emph default
 Lexpr([Expr[,Expr]*]?) | Lexpr([Expr[,Expr]*]?) | Expr binop Expr
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
binop ::= + - * / > < ==
\end_layout

\end_deeper
\begin_layout Subsection
Statements
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= nil 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= S; S 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= Expr 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
output
\emph default
 Expr 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= LExpr = Expr
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
if
\emph default
(Expr) { S } 
\emph on
else
\emph default
 { S } 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
while
\emph default
(Expr) { S } 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
function
\emph default
 ID ([ID [, ID]*]?) { S }
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
return
\emph default
 Expr
\end_layout

\begin_layout Section
Static semantics
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Store = 
\begin_inset Formula $\left\langle Vars,ObjMemory,FunctionPointers,This\right\rangle $
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Vars = ID 
\begin_inset Formula $\rightarrow$
\end_inset

 Value 
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Value = 
\begin_inset Formula $\left(N|T|\left\langle OBJ_{n}\right\rangle |\left\langle FP_{n},\left[ID,\ldots\right],ID\rightarrow Value\right\rangle \right)$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $V[\{ID=Value\}]=V\backslash\{ID\}\cup\{ID=Value\}$
\end_inset


\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
ObjMemory = 
\begin_inset Formula $\left\langle OBJ_{n}\right\rangle \rightarrow ID\rightarrow Value,n=0,1,2,...$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
FunctionPoints = 
\begin_inset Formula $\left\langle FP_{n}\right\rangle $
\end_inset


\begin_inset Formula $\rightarrow$
\end_inset


\begin_inset Formula $\left\langle S,\left[ID,\ldots\right]\right\rangle ,n=0,1,2,\ldots$
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
FS(FP,
\begin_inset Formula $\left\langle FP_{n}\right\rangle $
\end_inset

) =
\begin_inset Formula $S$
\end_inset

 where
\begin_inset Formula $\left\langle FP_{n}\right\rangle \rightarrow\left\langle S,\left[ID,\ldots\right]\right\rangle $
\end_inset


\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Configuration = 
\begin_inset Formula $\left\langle S,Store\right\rangle $
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
This = 
\begin_inset Formula $\left\langle OBJ_{n}\right\rangle $
\end_inset


\end_layout

\begin_layout Subsection
Program Invariant
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Global = 
\begin_inset Formula $\left\langle OBJ_{0}\right\rangle $
\end_inset


\end_layout

\begin_layout Section
Dynamic semantics
\end_layout

\begin_layout Subsection
Constant 
\end_layout

\begin_layout Standard
\begin_inset Formula $\left\langle con,s\right\rangle $
\end_inset


\end_layout

\begin_layout Subsection
Left Expressions
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle ID,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle V\left(ID\right),\left\langle V,OM,FP,T\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle OBJ_{n}\right\rangle .ID,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle OM\left(\left\langle OBJ_{n}\right\rangle \right)\left(ID\right),\left\langle V,OM,FP,T\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle e.ID,s\right\rangle \rightarrow\left\langle e'.ID,s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left(le\right),s\right\rangle \rightarrow\left\langle le,s\right\rangle $
\end_inset


\end_layout

\begin_layout Subsection
Expressions 
\end_layout

\begin_layout Itemize
\begin_inset Formula $<con_{0}\, binop\, con_{1},s>\rightarrow<con',s>$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $con'=con_{0}\,+|-|*|/|>|<|==\, con_{1}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e_{0},s\right\rangle \rightarrow\left\langle e_{0}',s'\right\rangle }{\left\langle e_{0}\, binop\, e,s\right\rangle \rightarrow\left\langle e_{0}'\, binop\, e,s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle con\, binop\, e,s\right\rangle \rightarrow\left\langle con\, binop\, e',s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle this,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle T,\left\langle V,OM,FP,T\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle global,s\right\rangle \rightarrow\left\langle \left\langle OBJ_{0}\right\rangle ,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle OBJ_{n}\right\rangle ,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle OM\left(\left\langle OBJ_{n}\right\rangle \right),\left\langle V,OM,FP,T\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection
Function calls
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle FP_{n},[ID_{0}|IDs],C\right\rangle \left(\left[con|es\right]\right),s\right\rangle \rightarrow\left\langle \left\langle FP_{n},IDs,C\cup\left\{ ID_{0}=con\right\} \right\rangle \left(es\right),s\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
where 
\begin_inset Formula $C=ID\rightarrow Value$
\end_inset

 and 
\begin_inset Formula $C\left(ID_{0}\right)$
\end_inset

is undefined
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e_{0},s\right\rangle \rightarrow\left\langle e_{0}',s'\right\rangle }{\left\langle \left\langle FP_{n},[ID_{0}|IDs],C\right\rangle \left(\left[e_{0}|es\right]\right),s\right\rangle \rightarrow\left\langle \left\langle FP_{n},IDs,C\right\rangle \left(\left[e_{0}'|es\right]\right),s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle FS\left(FP,\left\langle OBJ_{n}\right\rangle \right),\left\langle C,OM,FP,\phi\right\rangle \right\rangle \rightarrow^{*}\left\langle return\ con,\left\langle V',OM',FP',\phi\right\rangle \right\rangle }{\left\langle \left\langle FP_{n},\phi,C\right\rangle \left(\phi\right),\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle con,\left\langle V,OM',FP',T\right\rangle \right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle FS\left(FP,\left\langle OBJ_{n}\right\rangle \right),\left\langle C,OM,FP,\phi\right\rangle \right\rangle \rightarrow^{*}\left\langle nil,\left\langle V',OM',FP',\phi\right\rangle \right\rangle }{\left\langle \left\langle FP_{n},\phi,C\right\rangle \left(\phi\right),\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle nil,\left\langle V,OM',FP',T\right\rangle \right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle FP_{n},IDs,C\right\rangle \left(\phi\right),s\right\rangle \rightarrow\left\langle \left\langle FP_{n},IDs,C\right\rangle ,s\right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection
Method calls
\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle le,s\right\rangle \rightarrow\left\langle le',s'\right\rangle }{\left\langle le(\left[e\right]),s\right\rangle \rightarrow\left\langle le'(\left[e\right]),s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},[ID_{0}|ID],C\right\rangle \left(\left[con|es\right]\right),s\right\rangle \rightarrow\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},[ID],C\cup\left\{ ID_{0}=con\right\} \right\rangle \left(es\right),s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e_{0},s\right\rangle \rightarrow\left\langle e_{0}',s'\right\rangle }{\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},[ID_{0}|ID],C\right\rangle \left(\left[e_{0}|es\right]\right),s\right\rangle \rightarrow\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},[ID],C\right\rangle \left(\left[e_{0}'|es\right]\right),s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{OM\left(\left\langle OBJ_{n}\right\rangle \right)\left(ID\right)=\left\langle FP_{m},[ID']\right\rangle }{\left\langle \left\langle OBJ_{n}\right\rangle .ID\left(es\right),\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle \left\langle OBJ_{n}\right\rangle .\dot{\left\langle FP_{m},[ID'],\phi\right\rangle \left(es\right),\left\langle V,OM,FP,T\right\rangle }\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle FS\left(FP,\left\langle FP_{m}\right\rangle \right),\left\langle C,OM,FP,\left\langle OBJ_{n}\right\rangle \right\rangle \right\rangle \rightarrow^{*}\left\langle return\ con,\left\langle V',OM',FP',\left\langle OBJ_{n}\right\rangle \right\rangle \right\rangle }{\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},\phi,C\right\rangle \left(\phi\right),\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle con,\left\langle V,OM',FP',T\right\rangle \right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle FS\left(FP,\left\langle FP_{m}\right\rangle \right),\left\langle C,OM,FP,\left\langle OBJ_{n}\right\rangle \right\rangle \right\rangle \rightarrow^{*}\left\langle nil,\left\langle V',OM',FP',\left\langle OBJ_{n}\right\rangle \right\rangle \right\rangle }{\left\langle \left\langle OBJ_{n}\right\rangle .\left\langle FP_{m},\phi,C\right\rangle \left(\phi\right),\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle nil,\left\langle V,OM',FP',T\right\rangle \right\rangle }}$
\end_inset


\end_layout

\begin_layout Subsection
Statements
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle nil,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle return\ con,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle con,s\right\rangle \rightarrow\left\langle nil,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle con;S,s\right\rangle \rightarrow\left\langle S,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle nil;S,s\right\rangle \rightarrow\left\langle S,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle S_{0},s\right\rangle \rightarrow\left\langle S_{0}',s'\right\rangle }{\left\langle S_{0};S,s\right\rangle \rightarrow\left\langle S_{0}';S,s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle return\ con;S,s\right\rangle \rightarrow\left\langle return\ con,s\right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection
Assignments
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle ID=Value,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle nil,\left\langle V[\{ID=Value\}],OM,FP,T]\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \left\langle OBJ_{n}\right\rangle .ID=Value,\left\langle V,OM,FP,T\right\rangle \right\rangle \rightarrow\left\langle nil,\left\langle V,OM[\{OM(\left\langle OBJ_{n}\right\rangle )(ID)=Value\}],FP,T\right\rangle \right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle le,s\right\rangle \rightarrow\left\langle le',s'\right\rangle }{\left\langle le=e,s\right\rangle \rightarrow\left\langle le'=e,s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle ID=e,s\right\rangle \rightarrow\left\langle ID=e',s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle \left\langle OBJ_{n}\right\rangle .ID=e,s\right\rangle \rightarrow\left\langle \left\langle OBJ_{n}\right\rangle .ID=e',s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Subsubsection

\lang english
Flow controls
\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle if\ e\ then\ S,s\right\rangle \rightarrow\left\langle if\ e'\ then\ S,s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle if\ tt\ then\ S,s\right\rangle \rightarrow\left\langle S,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
\begin_inset Formula $\left\langle if\ ff\ then\ S,s\right\rangle \rightarrow\left\langle nil,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula ${\displaystyle \frac{\left\langle e,s\right\rangle \rightarrow\left\langle e',s'\right\rangle }{\left\langle if\ e\ then\ S\ else\ S_{0},s\right\rangle \rightarrow\left\langle if\ e'\ then\ S\ else\ S_{0},s'\right\rangle }}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle if\ tt\ then\ S\ else\ S_{0},s\right\rangle \rightarrow\left\langle S,s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english
\begin_inset Formula $\left\langle if\ ff\ then\ S\ else\ S_{0},s\right\rangle \rightarrow\left\langle S_{0},s\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle while\ e\ S,s\right\rangle \rightarrow\left\langle if\left(e\right)\ then\ S',s\right\rangle $
\end_inset

 where 
\begin_inset Formula $S'=S;while\ e\ S$
\end_inset


\end_layout

\begin_layout Part
Analysis
\end_layout

\begin_layout Section
Control Flow Analysis
\end_layout

\begin_layout Subsection
Numbering New Expressions and Function Declarations
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Expr ::= 
\emph on
new
\begin_inset Formula $_{n}$
\end_inset


\emph default
 Lexpr([Expr[,Expr]*]?) 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
function
\begin_inset Formula $_{n}$
\end_inset


\emph default
 ID ([ID [, ID]*]?) { Ss }
\end_layout

\begin_layout Subsection
Nodes and Edges
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
if
\emph default
(Expr) { S' }
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
next(S) = {succ(S), first(S')}
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
next(last(S')) = {succ(S)} if S' not 
\emph on
return
\emph default
 
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
if
\emph default
(Expr) { S' } 
\emph on
else
\emph default
 { S'' } 
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
next(S) = {first(S'), first(S'')}
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
next(last(S')) = succ(S) if S' not 
\emph on
return
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
next(last(S'')) = succ(S) if S'' not 
\emph on
return
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
while
\emph default
(Expr) { S' } 
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
next(S) = {first(S'}, succ(S)}
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
next(last(S')) = {S, succ(S)} if S' not 
\emph on
return
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
S ::= 
\emph on
return
\emph default
 Expr
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
next(S) = 
\begin_inset Formula $\phi$
\end_inset


\end_layout

\end_deeper
\begin_layout Section
Object Analysis
\end_layout

\begin_layout Standard
t = types = (number | boolean | OBJ
\begin_inset Formula $_{n}$
\end_inset

|FUNC
\begin_inset Formula $_{n,c}$
\end_inset

)
\end_layout

\begin_layout Standard
n_curried 
\begin_inset Formula $\in$
\end_inset

 [0, 
\begin_inset Formula $\propto$
\end_inset

)
\end_layout

\begin_layout Subsection
Program Invariants
\end_layout

\begin_layout Itemize
Functions = n
\begin_inset Formula $\mapsto$
\end_inset


\begin_inset Formula $\left\langle S,Params,ReturnType,this\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Params = 
\begin_inset Formula $\left[arg_{0}\mapsto\wp\left(types\right),\ldots\right]$
\end_inset


\end_layout

\begin_layout Itemize
ReturnType = 
\begin_inset Formula $\wp\left(types\right)$
\end_inset


\end_layout

\begin_layout Itemize
this = 
\begin_inset Formula $\wp\left(types\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
ObjectMemory
\end_layout

\begin_deeper
\begin_layout Itemize
n
\begin_inset Formula $\mapsto$
\end_inset


\begin_inset Formula $Symmap$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize

\emph on
global
\emph default
 
\begin_inset Formula $\mapsto$
\end_inset

OBJ
\begin_inset Formula $_{0}$
\end_inset


\end_layout

\begin_layout Subsection
Node Configuration
\end_layout

\begin_layout Subsubsection
Definitions
\end_layout

\begin_layout Itemize
Symmap = 
\begin_inset Formula $ID\mapsto\wp\left(types\right)$
\end_inset


\end_layout

\begin_layout Itemize
Absmem = 
\begin_inset Formula $OBJ_{n}\mapsto Symmap$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $Env=Symmap\times Absmem\times Functions\times CurrentFunction$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $S::Stmt\rightarrow Env\rightarrow Env$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathcal{E}::Expr\rightarrow Env\rightarrow\left\langle Env,type\right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection
Statement analysis
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ nil\ \rho=\rho$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $S\ \left[S_{1};S_{2}\right]=S\ S_{2}\circ S\ S_{1}$
\end_inset

if 
\begin_inset Formula $S_{1}$
\end_inset

is not a return statement, 
\begin_inset Formula $S\ S_{1}$
\end_inset

 otherwise
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[return\ e\right]\left\langle symmap,absmem,fps,cf\right\rangle =\left\langle \top,\top,fps\left[cf=\left\langle s,params,returntype\sqcup type,this\right\rangle \right],cf\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Where
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle s,params,returntype,this\right\rangle =fps(cf)$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle env',type\right\rangle =\mathcal{E}\ e\ \left\langle symmap,absmem,fps,cf\right\rangle $
\end_inset


\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[if\left(e\right)S_{1}else\ S_{2}\right]\rho=\rho_{1}\sqcup\rho_{2}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Where 
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle \rho',t\right\rangle =\mathcal{E}\ e\ \rho$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\rho_{1}=S\ S_{1}\rho'$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\rho_{2}=S\ S_{2}\rho'$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[if\left(e\right)S_{1}\right]\rho=\rho'\sqcup\rho_{1}$
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
Where 
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle \rho',t\right\rangle =\mathcal{E}\ e\ \rho$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\rho_{1}=S\ S_{1}\rho'$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[id=e\right]\ \rho=\left\langle symmap'[id\mapsto t],absmem'\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle absmem',t\right\rangle =\mathcal{E}\ e\ \rho$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[e_{1}.id=e_{2}\right]\ \rho=\left\langle symmap'',absmem''\left[OBJ_{n}=OBJ_{n}\left[id\mapsto type'\right]\right],fps,cf\right\rangle \mbox{for all}\ OBJ_{n}\in type$
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle absmem',type\right\rangle =\mathcal{E}\ e_{1}\ \rho$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle absmem'',type'\right\rangle =\mathcal{E}\ e_{2}\ \left\langle symmap',absmem'\right\rangle $
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[while(e)S_{1}\right]\ \left\langle symmap,absmem,fps,cf\right\rangle =\left\langle symmap\sqcup symmap'',absmem'\sqcup absmem'',fps,cf\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
whererec
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle \left\langle symmap,absmem',fps',cf\right\rangle ,type\right\rangle =\mathcal{E}\ e\ \left\langle symmap,absmem,fps,cf\right\rangle $
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle symmap'',absmem'',fps'',cf\right\rangle =S\ S_{1}\ \left\langle symmap\sqcup symmap'',absmem'\sqcup absmem'',fps',cf\right\rangle $
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[output\ e\right]\ \left\langle symmap,absmem,fps,cf\right\rangle =\left\langle symmap,absmem',fps,cf\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle \rho',type\right\rangle =\mathcal{E}\ e\ \left\langle symmap,absmem,fps,cf\right\rangle $
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $S\ \left[function_{n}\ id\left(\left[ids\right]\right)S_{1}\right]\ \left\langle symmap,absmem,fps,cf\right\rangle =\left\langle symmap\left[id\mapsto FUNC_{n,0}\right],absmem,fps,cf\right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection
Expressions
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ con\ \rho=\left\langle \rho,type\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $type=number\ \mbox{if}\ con\ \mbox{is a number}$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $type=boolean\ \mbox{if}\ con\ \mbox{is a boolean}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ global\ \rho=\left\langle \rho,OBJ_{0}\right\rangle $
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ Lexpr\ \rho=\mathcal{L}\ Lexpr\ \rho$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ this\ \left\langle symmap,absmem,fps,cf\right\rangle =\left\langle \left\langle symmap,absmem,fps,cf\right\rangle ,this\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\left\langle s,param,returntype,this\right\rangle =fps(cf)$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ input\ \rho=\left\langle \rho,number\right\rangle $
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{E}\ \left[new_{n}\ Lexpr\left(e_{1},e_{2},\cdots\right)\right]\ \left\langle symmap,absmem,fps,cf\right\rangle =\left\langle \left\langle symmap,absmem',fps',cf\right\rangle ,OBJ_{n}\right\rangle $
\end_inset


\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
where
\end_layout

\end_deeper
\end_body
\end_document
