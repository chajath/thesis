#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{stmaryrd}
\newcommand{\dd}[1]{\llbracket#1\rrbracket}
\end_preamble
\options fleqn
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Abstract functions
\end_layout

\begin_layout Itemize
Branching (if-then-else vs.
 union)
\end_layout

\begin_deeper
\begin_layout Itemize
cond
\end_layout

\begin_layout Itemize
isterm
\end_layout

\end_deeper
\begin_layout Itemize
Basic expressions (concrete value vs.
 singleton set)
\end_layout

\begin_layout Itemize
Assignment
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\mathtt{asg}:ID\rightarrow Value\rightarrow\rho\rightarrow\rho$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $\mathtt{member}:OBJ\rightarrow ID\rightarrow Value\rightarrow\rho\rightarrow\rho$
\end_inset


\end_layout

\begin_layout Itemize
conval
\end_layout

\begin_layout Itemize
obj
\end_layout

\begin_layout Itemize
getthis
\end_layout

\begin_layout Itemize
getinput
\end_layout

\begin_layout Itemize
call: n,p,m,f,rho
\end_layout

\begin_layout Paragraph
Statement to initial and final state mapping
\end_layout

\begin_layout Standard
\begin_inset Formula $\sigma:s\rightarrow\rho\rightarrow\rho$
\end_inset


\end_layout

\begin_layout Paragraph
Auxiliary functions
\end_layout

\begin_layout Standard
\begin_inset Formula $M_{S}$
\end_inset

 is a state transformer monad that takes a list of vectors (variable name,
 lambda expressions) with free variables and produces a state transformer
 with return value.
\end_layout

\begin_layout Standard
\begin_inset Formula $M_{S}:\left[p\times\left(\beta\rightarrow\left(\rho\times\sigma\right)\rightarrow\left(\rho\times\sigma\times\alpha\right)\right)\right]\rightarrow\beta\rightarrow\left(\rho\times\sigma\right)\rightarrow\left(\rho\times\sigma\times\alpha\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $M_{S}\ \left[T_{0}\right]=T_{0}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $M_{S}\ \left[\left\langle p_{0},T_{0}\right\rangle |T_{rest}\right]\ b\ \rho\ \sigma=\left(\lambda p_{0}.M_{S}\ T_{rest}\ b\ \rho'\ \sigma'\right)\ v_{0}$
\end_inset


\end_layout

\begin_layout Standard
where 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle \rho',\sigma',v_{0}\right\rangle =T_{0}\ \rho\ \sigma$
\end_inset


\end_layout

\begin_layout Itemize
Pass 
\begin_inset Formula $p_{0}$
\end_inset

 on as a free variable, i.e.
 
\begin_inset Formula $p_{0}\in FV\left(T_{rest}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I_{\rho}$
\end_inset

 Identity state transformer takes a constant and lifts it to a identity
 state transformer with the constant as a return value
\end_layout

\begin_layout Standard
\begin_inset Formula $I_{\rho}:\alpha\rightarrow\beta\rightarrow\left(\rho\times\sigma\right)\rightarrow\left(\rho\times\sigma\times\alpha\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I_{\rho}\ v\ \_\ \rho\ \sigma=\left\langle \rho,\sigma,v\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I_{S}$
\end_inset

 lifts a state transformer to a state transformer with state collector passing
 through
\end_layout

\begin_layout Standard
\begin_inset Formula $I_{S}:\left(\rho\rightarrow\rho\times\alpha\right)\rightarrow\left(\rho\times\sigma\right)\rightarrow\left(\rho\times\sigma\times\alpha\right)$
\end_inset


\end_layout

\begin_layout Paragraph
We define following functions
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{2}
 & T_{S} & : & s\rightarrow\left(\beta\rightarrow\rho\times\sigma\rightarrow\left(\rho\times\sigma\times\alpha\right)\right)\rightarrow\left(\beta\rightarrow\rho\times\sigma\rightarrow\left(\rho\times\sigma\times\alpha\right)\right)\\
 & T_{S}\ X\ f\ \rho\ \sigma\ s & = & \left\langle \rho',\sigma'',\alpha'\right\rangle \\
 &  &  & \begin{aligned}\mbox{where} & \left\langle \rho',\sigma',\alpha'\right\rangle =X\ f\ \rho\ \sigma\\
 & \sigma''=\sigma'\left[s\times\rho\mapsto\rho'\right]
\end{aligned}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathcal{F} & : & number\rightarrow\left(\rho\times\sigma\rightarrow\left(\rho\times\sigma\times Value\right)\right)\\
\mathcal{S} & : & Stmt\rightarrow\mathcal{F}\rightarrow s\rightarrow\left(\rho\times\sigma\rightarrow\left(\rho\times\sigma\times Value\right)\right)\\
\mathcal{E} & : & Expr\rightarrow\mathcal{F}\rightarrow\rho\rightarrow\rho\times Value
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
 & \mathcal{F} & = & Y\lambda f.\lambda n.\mathcal{S}\dd{\mathtt{Stmt}_{n}}\ \mathtt{sid}\left(\mathtt{Stmt}_{n}\right)\ f\\
 & \mathcal{S}\dd{S_{1};S_{2}} & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle r,S\dd{S_{1}}\ \mathtt{sid}\left(S_{1}\right)\right\rangle \\
 & \left\langle \_,\mathtt{isterm}\left(r,\lambda.S\dd{S_{2}}\ \mathtt{sid}\left(S_{2}\right)\right)\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{S}\dd{\mathtt{return}\ e} & = & T_{S}\ \mathcal{E}\dd{e}\\
 & \mathcal{S}\dd{\mathtt{if}\left(e\right)S_{1}}\ f & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle v,\mathcal{E}\dd{e}\right\rangle \\
 & \left\langle \_,\mathtt{cond}\left(v,\mathcal{S}\dd{S_{1}},I_{\rho}\ NoReturn\right)\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{S}\dd{\mathtt{if}\left(e\right)S_{1}\mathtt{else}S_{2}}\ f & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle v,E\dd{e}\right\rangle \\
 & \left\langle \_,\mathtt{cond}\left(v,\mathcal{S}\dd{S_{1}},\mathcal{S}\dd{S_{2}}\right)\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{S}\dd{id=e} & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle v,\mathcal{E}\dd{e}\right\rangle \\
 & \left\langle \_,\mathtt{asg}\left(id,v\right)\right\rangle \\
 & \left\langle \_,I_{\rho}\ NoReturn\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{S}\dd{e_{1}.id=e_{2}} & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle v,\mathcal{E}\dd{e_{2}}\right\rangle \\
 & \left\langle r,\mathcal{E}\dd{e_{1}}\right\rangle \\
 & \left\langle \_,\mathtt{member}\left(r,id,v\right)\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{S}\dd{\mathtt{while}\left(e\right)S_{1}}\ f\ \rho & = & T_{S}\ \left(Y\lambda x.\lambda\rho,r.\mathtt{isterm}\left(r,M_{S}\left(\begin{aligned} & \left\langle v,\mathcal{E}\dd{e}\right\rangle \\
 & \left\langle \_,\mathtt{cond}\left(v,\lambda f,\rho'.x\ \left(\mathcal{S}\dd{S_{1}}\ \mathtt{sid}\left(S_{1}\right)f\ \rho'\right),I_{\rho}\ NoRet\right)\right\rangle 
\end{aligned}
\right)\ f\right)\right)\ \rho\ NoRet\\
 & \mathcal{E}\dd{con} & = & T_{S}\ M_{S}\ \left\langle \_,I_{\rho}\ \mathtt{conval}\left(con\right)\right\rangle \\
 & \mathcal{E}\dd{\mathtt{global}} & = & T_{S}\ M_{S}\ \left\langle \_,\lambda f.\rho.\sigma.I_{\rho}\ \mathtt{obj}\left(0,\rho\right)\right\rangle \\
 & \mathcal{E}\dd{L} & = & T_{S}\ \mathcal{L}\dd{L}\\
 & \mathcal{E}\dd{\mathtt{this}} & = & T_{S}\ M_{S}\ \left\langle \_,\lambda f.\rho.\sigma.I_{\rho}\ \mathtt{getthis}\left(\rho\right)\right\rangle \\
 & \mathcal{E}\dd{\mathtt{input}} & = & T_{S}\ M_{S}\ \left\langle \_,I_{S}\ \lambda f.\rho.\mathtt{getinput}\left(\rho\right)\right\rangle \\
 & \mathcal{E}\dd{\mathtt{new}\ L\left(E*\right)} & = & T_{S}\ M_{s}\left(\begin{aligned} & \left\langle n,\mathcal{L}\ \dd{L}\right\rangle \\
 & \left\langle p,\mathtt{evalParams}\ E*\ \phi\right\rangle \\
 & \left\langle m,\lambda f.\rho.\mathtt{newobj}\left(\rho\right)\right\rangle \\
 & \left\langle \_,\lambda f.\rho.\mathtt{call}\left(n,p,m,f,\rho\right)\right\rangle \\
 & \left\langle \_,I_{\rho}\ m\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{E}\dd{L\left(E*\right)} & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle n,\mathcal{L}\ \dd{L}\right\rangle \\
 & \left\langle p,\mathtt{evalParams}\ E*\ \phi\right\rangle \\
 & \left\langle \_,\lambda f,p.\mathtt{call}\left(n,p,\mathtt{obj}\left(0,\rho\right),f,\rho\right)\right\rangle 
\end{aligned}
\right)\\
 & \mathcal{E}\dd{E_{0}.L\left(E*\right)} & = & T_{S}\ M_{S}\left(\begin{aligned} & \left\langle t,\mathcal{E}\ \dd{E_{0}}\right\rangle \\
 & \left\langle n,\mathcal{L}\ \dd{L}\right\rangle \\
 & \left\langle p,\mathtt{evalParams}\ E*\ \phi\right\rangle \\
 & \left\langle \_,\lambda f,p.\mathtt{call}\left(n,p,t,f,\rho\right)\right\rangle 
\end{aligned}
\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Where
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathtt{Stmt}_{n}$
\end_inset

 is a function body of a function numbered 
\begin_inset Formula $n$
\end_inset


\end_layout

\begin_layout Paragraph
Concrete functions
\end_layout

\begin_layout Standard
\begin_inset Formula $\rho=\left\langle V,OM,T\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathtt{isterm}\left(v,s\right) & = & \begin{cases}
s & v=NoReturn\\
I_{\rho}\ v & \mbox{otherwise}
\end{cases}\\
\mathtt{cond}\left(v,s_{1},s_{2}\right) & = & \begin{cases}
s_{1} & v=true\\
s_{2} & v=false
\end{cases}\\
\mathtt{asg}\left(id,v\right) & = & \lambda f,\left\langle V,OM,T\right\rangle .\left\langle V\left[id=v\right],OM,T\right\rangle \\
\mathtt{member}\left(OBJ_{n},id,v\right) & = & \lambda f,\left\langle V,OM,T\right\rangle .\left\langle V,OM\left[OBJ_{n}\left[id\mapsto v\right]\right],T\right\rangle \\
\mathtt{conval}\left(con\right) & = & con\\
\mathtt{obj}\left(n,\left\langle V,OM,T\right\rangle \right) & = & OM\left(n\right)\\
\mathtt{getthis}\left(\left\langle V,OM,T\right\rangle \right) & = & T\\
\mathtt{getinput\left(\rho\right)} & =\\
\mathtt{newobj}\left(\left\langle V,OM,T\right\rangle \right) & = & \left\langle \left\langle V,OM\left[n\mapsto\phi\right],T\right\rangle ,OBJ_{n}\right\rangle \ \mbox{where}\ n=N\left(OM\right)\\
\mathtt{call}\left(\left\langle FP_{n},C\right\rangle ,p,t,f,\left\langle V,OM,T\right\rangle ,s\right) & = & \begin{cases}
\left\langle \left\langle V,OM',T\right\rangle ,s',r\right\rangle \ \mbox{where}\ \left\langle \left\langle V',OM',T'\right\rangle ,s',r\right\rangle =f\ n\ \left\langle C\backslash p,OM,t\right\rangle \ s & N\left(C\right)+N\left(p\right)=arity_{n}\\
\left\langle \left\langle V,OM,T\right\rangle ,s,\left\langle FP_{n},C\backslash p\right\rangle \right\rangle  & \mbox{otherwise}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Paragraph
Abstract functions for Forward-may analysis 
\end_layout

\begin_layout Standard
\begin_inset Formula $\rho=\left\langle \sigma,\alpha,\tau\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
define 
\begin_inset Formula $\rho_{1}\sqcup\rho_{2}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\left\langle \rho_{1},r_{1}\right\rangle \sqcup\left\langle \rho_{2},r_{2}\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\left\langle \rho_{1},\sigma_{1},r_{1}\right\rangle \sqcup\left\langle \rho_{2},\sigma_{2},r_{2}\right\rangle =\left\langle \rho_{1}\sqcup\rho_{2},\sigma_{1}\cup\sigma_{2},r_{1}\sqcup r_{2}\right\rangle $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\mathtt{isterm}\left(v,s\right) & = & \begin{cases}
s & v=\left\{ NoReturn\right\} \\
I_{\rho}\ v & \mbox{otherwise}
\end{cases}\\
\mathtt{cond}\left(v,s_{1},s_{2}\right) & = & s_{1}\sqcup s_{2}\\
\mathtt{asg}\left(id,v\right) & = & \lambda f,\left\langle \sigma,\alpha,\tau\right\rangle .\left\langle \sigma\left[id=v\right],\alpha,\tau\right\rangle \\
\mathtt{member}\left(n,id,v\right) & = & \lambda f,\left\langle \sigma,\alpha,\tau\right\rangle .\left\langle \sigma,\left\{ x|OBJ_{x}\in\alpha,x=\begin{cases}
\alpha\left(x\right)\left[id\mapsto v\right] & OBJ_{x}\in n\\
\alpha\left(x\right) & \mbox{otherwise}
\end{cases}\right\} ,\tau\right\rangle \\
\mathtt{conval}\left(con\right) & = & \begin{cases}
Number & con\in\mathbb{N}\\
Boolean & con\in\left\{ true,false\right\} 
\end{cases}\\
\mathtt{obj}\left(n,\left\langle \sigma,\alpha,\tau\right\rangle \right) & = & \alpha\left(n\right)\\
\mathtt{getthis}\left(\left\langle \sigma,\alpha,\tau\right\rangle \right) & = & \tau\\
\mathtt{getinput\left(\rho\right)} & = & \left\langle \rho,\left\{ Number\right\} \right\rangle \\
\mathtt{newobj}\left(\left\langle \sigma,\alpha,\tau\right\rangle \right) & = & \left\langle \left\langle \sigma,\alpha\left[n\mapsto\phi\right],\tau\right\rangle ,OBJ_{n}\right\rangle \ \mbox{where}\ n=N\left(\alpha\right)\\
\mathtt{call}\left(n,p,t,f,\left\langle \sigma,\alpha,\tau\right\rangle ,s\right) & = & \underset{\left\langle FP_{x},C\right\rangle \in n}{\bigsqcup}\mathtt{scall}\left(\left\langle FP_{x},C\right\rangle ,p,t,f,\left\langle \sigma,\alpha,\tau\right\rangle ,s\right)\\
\mathtt{scall}\left(\left\langle FP_{n},C\right\rangle ,p,t,f,\left\langle \sigma,\alpha,\tau\right\rangle ,s\right) & = & \begin{cases}
\left\langle \left\langle \sigma,\alpha',\tau\right\rangle ,s',r\right\rangle \ \mbox{where}\ \left\langle \left\langle \sigma',\alpha',\tau'\right\rangle ,s',r\right\rangle =f\ n\ \left\langle C\backslash p,\alpha,\tau\right\rangle \ s & N\left(C\right)+N\left(p\right)=arity_{n}\\
\left\langle \left\langle \sigma,\alpha,\tau\right\rangle ,s,\left\langle FP_{n},C\backslash p\right\rangle \right\rangle  & \mbox{otherwise}
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\end_body
\end_document
